// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  password String 
  name    String?
  role    Role     @default(USER)
  categories Category[]
  proposal Proposal[]
  Sale          Sale[]
}

model Proposal {
  id         String        @id @default(cuid())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  title      String
  published  Boolean    @default(false)
  author     User       @relation(fields: [authorId], references: [id])
  authorId   Int
  receiverId   Int
  SaleItems    SaleItem[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  description  String
  users User[]
}

model Sale {
  id                String     @id @default(cuid())
  userId            Int
  user              User       @relation(fields: [userId], references: [id])
  checkoutSessionId String
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
  SaleItems         SaleItem[]
}

model SaleItem {
  id        String  @id @default(cuid())
  saleId    String
  sale      Sale    @relation(fields: [saleId], references: [id])
  proposalId String
  proposal   Proposal @relation(fields: [proposalId], references: [id])
  quantity  Int
}

enum Role {
  USER
  ADMIN
}